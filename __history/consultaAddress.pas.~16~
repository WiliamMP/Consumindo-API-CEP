unit consultaAddress;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Mask, System.StrUtils,
  IPPeerClient, REST.Client, Data.Bind.Components, Data.Bind.ObjectScope, System.JSON,
  RzTabs;

type
  TfrmConsultaAddress = class(TForm)
    lblUF: TLabel;
    lblLogradouro: TLabel;
    lblCidade: TLabel;
    edtLogradouro: TMaskEdit;
    cmbUF: TComboBox;
    cmbCidade: TComboBox;
    btnBusca: TButton;
    RESTClient1: TRESTClient;
    RESTRequest1: TRESTRequest;
    RESTResponse1: TRESTResponse;
    ltbEnderecos: TListBox;
    edtCEP: TMaskEdit;
    procedure cmbUFChange(Sender: TObject);
    procedure cmbCidadeChange(Sender: TObject);
    procedure btnBuscaClick(Sender: TObject);
    procedure edtLogradouroChange(Sender: TObject);
  private
    { Private declarations }
  public
    consultado : Boolean;
    ansResource : string;
  end;

var
  frmConsultaAddress: TfrmConsultaAddress;

implementation

{$R *.dfm}

procedure TfrmConsultaAddress.btnBuscaClick(Sender: TObject);
var

  logradouro : string;
  jsonAPI : string;
  i : Integer;
  strJson : string;

  jsonObj : TJSONObject;
  jSubPar : TJSONPair;
  jsonStringData : string;


begin
      logradouro := edtLogradouro.Text;
      if not consultado then
      begin

          logradouro := StringReplace(logradouro, ' ','+',[rfReplaceAll, rfIgnoreCase]);

          RESTRequest1.Resource := RESTRequest1.Resource + logradouro + '/json';
          RESTRequest1.Execute;
          RESTRequest1.Resource := StringReplace(RESTRequest1.Resource, logradouro + '/json', '',[rfReplaceAll, rfIgnoreCase]);
          consultado := True;

          // objecto to array
          jsonAPI := RESTResponse1.Content;

          jsonObj := TJSONObject.ParseJSONValue(jsonAPI) as TJSONObject;

          for i := 0 to jsonObj do

          begin
            jSubPar := jsonObj.Get(i);
              if jSubPar.JsonString.Value = 'data' then
                begin
                  jsonStringData :=  jSubPar.toString;
                end;
          end;

          jsonObj := nil;
          jsonObj := TJSONObject.ParseJSONValue();



      end;

end;

procedure TfrmConsultaAddress.cmbCidadeChange(Sender: TObject);
var

  City : string;

begin

City := cmbCidade.Text;
consultado := False;

if not City.IsEmpty then

  begin
    case AnsiIndexStr(City, ['Florianopolis','Curitiba','Porto Alegre']) of

    0:

    begin
    RESTRequest1.Resource := '';
    RESTRequest1.Resource := RESTRequest1.Resource + 'ws/SC/Florianopolis/';
    ansResource := RESTRequest1.Resource;
    end;

    1:

    begin;
    RESTRequest1.Resource := '';
    RESTRequest1.Resource := RESTRequest1.Resource + 'ws/PR/Curitiba/';
    ansResource := RESTRequest1.Resource;
    end;

    2:

    begin
    RESTRequest1.Resource := '';
    RESTRequest1.Resource := RESTRequest1.Resource + 'ws/RS/Porto Alegre/';
    ansResource := RESTRequest1.Resource;
    end;

    end;


  end;
end;

procedure TfrmConsultaAddress.cmbUFChange(Sender: TObject);
var

  UF : string;
                                                                             begin

  UF := cmbUF.Text;
  RESTRequest1.Resource := '';
  consultado := False;

  if not UF.IsEmpty then
  begin
    cmbCidade.Enabled := True;
    case AnsiIndexStr(UF, ['SC','PR','RS']) of

    0:

    begin
    cmbCidade.Clear; // limpar para colocar novos

    cmbCidade.Items.Add('Florianopolis');;
    end;

    1:

    begin
    cmbCidade.Clear; // limpar para colocar novos

    cmbCidade.Items.Add('Curitiba');
    end;

    2:

    begin
    cmbCidade.Clear; // limpar para colocar novos
    RESTRequest1.ClearBody;

    cmbCidade.Items.Add('Porto Alegre');
    end;

    end;
  end;




end;

procedure TfrmConsultaAddress.edtLogradouroChange(Sender: TObject);
begin
  consultado := False;
end;

end.
